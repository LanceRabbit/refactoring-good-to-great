Intro - 2 mins
 * me
 * intermediate to advanced
 * tell, don't ask
 * ask questions
 * I have bribes

data_clump.rb - 24 minutes, spend less time on coupling
  * roughly a B
  * move temp to query on OrdersReport
    * shorter methods
    * can reuse
    * don't have to read it; makes logic clearer
  * move select to Order#placed_between?(start_date, end_date)
  * identify data clump, passed in three places
  * extract to DateRange
  * immediate win: coupling is reduced
    * the degree to which components rely on each other
    * fewer arguments is less coupling
  * create within_range? on DateRange
  * create private Order#total_sales
  * change to inject(&:+)

null_object.rb - 6 m
  * breaking the core ideas of polymorphism 
    * rather than just sending a msg, we're asking and then reacting
    * would rather just send a message
  * we co-opted nil to stand in for 'no customer'
  * create NullCustomer
  * usable for Prospect vs Logged-in users
  * mention podcast

open_closed_decorator.rb
  * change view to @user.welcome_message
  * create transparent decorators
  * proxy:
    def method_missing(method, *args, &block)
      @user.send(method, *args, &block)
    end
  * redefine welcome_message
  * wins:
    * logic is separated
    * new methods will still show up on decorated

when to refactor
  * god objects
    * wc -l
  * high churn files
  * bugs love company


TODO:
  run in tiny res
  rename files
